/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  IdentityUserDto,
  RegisterDto,
  RemoteServiceErrorResponse,
  ResetPasswordDto,
  SendPasswordResetCodeDto,
  VerifyPasswordResetTokenInput,
} from '../models';

export interface ApiAccountRegisterPostRequest {
    registerDto?: RegisterDto;
}

export interface ApiAccountResetPasswordPostRequest {
    resetPasswordDto?: ResetPasswordDto;
}

export interface ApiAccountSendPasswordResetCodePostRequest {
    sendPasswordResetCodeDto?: SendPasswordResetCodeDto;
}

export interface ApiAccountVerifyPasswordResetTokenPostRequest {
    verifyPasswordResetTokenInput?: VerifyPasswordResetTokenInput;
}

/**
 * 
 */
export class AccountApi extends runtime.BaseAPI {

    /**
     */
    private apiAccountRegisterPostRaw = async (requestParameters: ApiAccountRegisterPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IdentityUserDto>> => {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/account/register`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.registerDto,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    public apiAccountRegisterPost = async (requestParameters: ApiAccountRegisterPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IdentityUserDto> => {
        const response = await this.apiAccountRegisterPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    private apiAccountResetPasswordPostRaw = async (requestParameters: ApiAccountResetPasswordPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> => {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/account/reset-password`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.resetPasswordDto,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    public apiAccountResetPasswordPost = async (requestParameters: ApiAccountResetPasswordPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> => {
        await this.apiAccountResetPasswordPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    private apiAccountSendPasswordResetCodePostRaw = async (requestParameters: ApiAccountSendPasswordResetCodePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> => {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/account/send-password-reset-code`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.sendPasswordResetCodeDto,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    public apiAccountSendPasswordResetCodePost = async (requestParameters: ApiAccountSendPasswordResetCodePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> => {
        await this.apiAccountSendPasswordResetCodePostRaw(requestParameters, initOverrides);
    }

    /**
     */
    private apiAccountVerifyPasswordResetTokenPostRaw = async (requestParameters: ApiAccountVerifyPasswordResetTokenPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<boolean>> => {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/account/verify-password-reset-token`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.verifyPasswordResetTokenInput,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    public apiAccountVerifyPasswordResetTokenPost = async (requestParameters: ApiAccountVerifyPasswordResetTokenPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<boolean> => {
        const response = await this.apiAccountVerifyPasswordResetTokenPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
