/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MethodParameterApiDescriptionModel
 */
export interface MethodParameterApiDescriptionModel {
    /**
     * 
     * @type {string}
     * @memberof MethodParameterApiDescriptionModel
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MethodParameterApiDescriptionModel
     */
    typeAsString?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MethodParameterApiDescriptionModel
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MethodParameterApiDescriptionModel
     */
    typeSimple?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MethodParameterApiDescriptionModel
     */
    isOptional?: boolean;
    /**
     * 
     * @type {any}
     * @memberof MethodParameterApiDescriptionModel
     */
    defaultValue?: any | null;
}

/**
 * Check if a given object implements the MethodParameterApiDescriptionModel interface.
 */
export function instanceOfMethodParameterApiDescriptionModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MethodParameterApiDescriptionModelFromJSON(json: any): MethodParameterApiDescriptionModel {
    return MethodParameterApiDescriptionModelFromJSONTyped(json, false);
}

export function MethodParameterApiDescriptionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MethodParameterApiDescriptionModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'typeAsString': !exists(json, 'typeAsString') ? undefined : json['typeAsString'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'typeSimple': !exists(json, 'typeSimple') ? undefined : json['typeSimple'],
        'isOptional': !exists(json, 'isOptional') ? undefined : json['isOptional'],
        'defaultValue': !exists(json, 'defaultValue') ? undefined : json['defaultValue'],
    };
}

export function MethodParameterApiDescriptionModelToJSON(value?: MethodParameterApiDescriptionModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'typeAsString': value.typeAsString,
        'type': value.type,
        'typeSimple': value.typeSimple,
        'isOptional': value.isOptional,
        'defaultValue': value.defaultValue,
    };
}

