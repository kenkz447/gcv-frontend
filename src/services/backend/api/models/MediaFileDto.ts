/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MediaFileDto
 */
export interface MediaFileDto {
    /**
     * 
     * @type {string}
     * @memberof MediaFileDto
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof MediaFileDto
     */
    creationTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof MediaFileDto
     */
    creatorId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof MediaFileDto
     */
    lastModificationTime?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof MediaFileDto
     */
    lastModifierId?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MediaFileDto
     */
    isDeleted?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MediaFileDto
     */
    deleterId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof MediaFileDto
     */
    deletionTime?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof MediaFileDto
     */
    thumbnailPath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MediaFileDto
     */
    path?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MediaFileDto
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MediaFileDto
     */
    extension?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MediaFileDto
     */
    type?: string | null;
    /**
     * 
     * @type {number}
     * @memberof MediaFileDto
     */
    size?: number;
}

/**
 * Check if a given object implements the MediaFileDto interface.
 */
export function instanceOfMediaFileDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MediaFileDtoFromJSON(json: any): MediaFileDto {
    return MediaFileDtoFromJSONTyped(json, false);
}

export function MediaFileDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaFileDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'creationTime': !exists(json, 'creationTime') ? undefined : (new Date(json['creationTime'])),
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'lastModificationTime': !exists(json, 'lastModificationTime') ? undefined : (json['lastModificationTime'] === null ? null : new Date(json['lastModificationTime'])),
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'isDeleted': !exists(json, 'isDeleted') ? undefined : json['isDeleted'],
        'deleterId': !exists(json, 'deleterId') ? undefined : json['deleterId'],
        'deletionTime': !exists(json, 'deletionTime') ? undefined : (json['deletionTime'] === null ? null : new Date(json['deletionTime'])),
        'thumbnailPath': !exists(json, 'thumbnailPath') ? undefined : json['thumbnailPath'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'extension': !exists(json, 'extension') ? undefined : json['extension'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'size': !exists(json, 'size') ? undefined : json['size'],
    };
}

export function MediaFileDtoToJSON(value?: MediaFileDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'creationTime': value.creationTime === undefined ? undefined : (value.creationTime.toISOString()),
        'creatorId': value.creatorId,
        'lastModificationTime': value.lastModificationTime === undefined ? undefined : (value.lastModificationTime === null ? null : value.lastModificationTime.toISOString()),
        'lastModifierId': value.lastModifierId,
        'isDeleted': value.isDeleted,
        'deleterId': value.deleterId,
        'deletionTime': value.deletionTime === undefined ? undefined : (value.deletionTime === null ? null : value.deletionTime.toISOString()),
        'thumbnailPath': value.thumbnailPath,
        'path': value.path,
        'name': value.name,
        'extension': value.extension,
        'type': value.type,
        'size': value.size,
    };
}

