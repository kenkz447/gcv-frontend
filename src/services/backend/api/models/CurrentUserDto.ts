/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CurrentUserDto
 */
export interface CurrentUserDto {
    /**
     * 
     * @type {boolean}
     * @memberof CurrentUserDto
     */
    isAuthenticated?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CurrentUserDto
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CurrentUserDto
     */
    tenantId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CurrentUserDto
     */
    impersonatorUserId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CurrentUserDto
     */
    impersonatorTenantId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CurrentUserDto
     */
    impersonatorUserName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CurrentUserDto
     */
    impersonatorTenantName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CurrentUserDto
     */
    userName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CurrentUserDto
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CurrentUserDto
     */
    surName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CurrentUserDto
     */
    email?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof CurrentUserDto
     */
    emailVerified?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CurrentUserDto
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof CurrentUserDto
     */
    phoneNumberVerified?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof CurrentUserDto
     */
    roles?: Array<string> | null;
}

/**
 * Check if a given object implements the CurrentUserDto interface.
 */
export function instanceOfCurrentUserDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CurrentUserDtoFromJSON(json: any): CurrentUserDto {
    return CurrentUserDtoFromJSONTyped(json, false);
}

export function CurrentUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrentUserDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isAuthenticated': !exists(json, 'isAuthenticated') ? undefined : json['isAuthenticated'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'impersonatorUserId': !exists(json, 'impersonatorUserId') ? undefined : json['impersonatorUserId'],
        'impersonatorTenantId': !exists(json, 'impersonatorTenantId') ? undefined : json['impersonatorTenantId'],
        'impersonatorUserName': !exists(json, 'impersonatorUserName') ? undefined : json['impersonatorUserName'],
        'impersonatorTenantName': !exists(json, 'impersonatorTenantName') ? undefined : json['impersonatorTenantName'],
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'surName': !exists(json, 'surName') ? undefined : json['surName'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'emailVerified': !exists(json, 'emailVerified') ? undefined : json['emailVerified'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'phoneNumberVerified': !exists(json, 'phoneNumberVerified') ? undefined : json['phoneNumberVerified'],
        'roles': !exists(json, 'roles') ? undefined : json['roles'],
    };
}

export function CurrentUserDtoToJSON(value?: CurrentUserDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isAuthenticated': value.isAuthenticated,
        'id': value.id,
        'tenantId': value.tenantId,
        'impersonatorUserId': value.impersonatorUserId,
        'impersonatorTenantId': value.impersonatorTenantId,
        'impersonatorUserName': value.impersonatorUserName,
        'impersonatorTenantName': value.impersonatorTenantName,
        'userName': value.userName,
        'name': value.name,
        'surName': value.surName,
        'email': value.email,
        'emailVerified': value.emailVerified,
        'phoneNumber': value.phoneNumber,
        'phoneNumberVerified': value.phoneNumberVerified,
        'roles': value.roles,
    };
}

