/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PermissionGrantInfoDto } from './PermissionGrantInfoDto';
import {
    PermissionGrantInfoDtoFromJSON,
    PermissionGrantInfoDtoFromJSONTyped,
    PermissionGrantInfoDtoToJSON,
} from './PermissionGrantInfoDto';

/**
 * 
 * @export
 * @interface PermissionGroupDto
 */
export interface PermissionGroupDto {
    /**
     * 
     * @type {string}
     * @memberof PermissionGroupDto
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PermissionGroupDto
     */
    displayName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PermissionGroupDto
     */
    displayNameKey?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PermissionGroupDto
     */
    displayNameResource?: string | null;
    /**
     * 
     * @type {Array<PermissionGrantInfoDto>}
     * @memberof PermissionGroupDto
     */
    permissions?: Array<PermissionGrantInfoDto> | null;
}

/**
 * Check if a given object implements the PermissionGroupDto interface.
 */
export function instanceOfPermissionGroupDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PermissionGroupDtoFromJSON(json: any): PermissionGroupDto {
    return PermissionGroupDtoFromJSONTyped(json, false);
}

export function PermissionGroupDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PermissionGroupDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'displayNameKey': !exists(json, 'displayNameKey') ? undefined : json['displayNameKey'],
        'displayNameResource': !exists(json, 'displayNameResource') ? undefined : json['displayNameResource'],
        'permissions': !exists(json, 'permissions') ? undefined : (json['permissions'] === null ? null : (json['permissions'] as Array<any>).map(PermissionGrantInfoDtoFromJSON)),
    };
}

export function PermissionGroupDtoToJSON(value?: PermissionGroupDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'displayName': value.displayName,
        'displayNameKey': value.displayNameKey,
        'displayNameResource': value.displayNameResource,
        'permissions': value.permissions === undefined ? undefined : (value.permissions === null ? null : (value.permissions as Array<any>).map(PermissionGrantInfoDtoToJSON)),
    };
}

