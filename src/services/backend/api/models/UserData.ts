/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserData
 */
export interface UserData {
    /**
     * 
     * @type {string}
     * @memberof UserData
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UserData
     */
    tenantId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserData
     */
    userName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserData
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserData
     */
    surname?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserData
     */
    isActive?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserData
     */
    email?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserData
     */
    emailConfirmed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserData
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserData
     */
    phoneNumberConfirmed?: boolean;
}

/**
 * Check if a given object implements the UserData interface.
 */
export function instanceOfUserData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserDataFromJSON(json: any): UserData {
    return UserDataFromJSONTyped(json, false);
}

export function UserDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'surname': !exists(json, 'surname') ? undefined : json['surname'],
        'isActive': !exists(json, 'isActive') ? undefined : json['isActive'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'emailConfirmed': !exists(json, 'emailConfirmed') ? undefined : json['emailConfirmed'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'phoneNumberConfirmed': !exists(json, 'phoneNumberConfirmed') ? undefined : json['phoneNumberConfirmed'],
    };
}

export function UserDataToJSON(value?: UserData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'tenantId': value.tenantId,
        'userName': value.userName,
        'name': value.name,
        'surname': value.surname,
        'isActive': value.isActive,
        'email': value.email,
        'emailConfirmed': value.emailConfirmed,
        'phoneNumber': value.phoneNumber,
        'phoneNumberConfirmed': value.phoneNumberConfirmed,
    };
}

