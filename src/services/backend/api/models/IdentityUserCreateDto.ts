/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IdentityUserCreateDto
 */
export interface IdentityUserCreateDto {
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof IdentityUserCreateDto
     */
    readonly extraProperties?: { [key: string]: any; } | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityUserCreateDto
     */
    userName: string;
    /**
     * 
     * @type {string}
     * @memberof IdentityUserCreateDto
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityUserCreateDto
     */
    surname?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityUserCreateDto
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof IdentityUserCreateDto
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof IdentityUserCreateDto
     */
    isActive?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IdentityUserCreateDto
     */
    lockoutEnabled?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof IdentityUserCreateDto
     */
    roleNames?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof IdentityUserCreateDto
     */
    password: string;
}

/**
 * Check if a given object implements the IdentityUserCreateDto interface.
 */
export function instanceOfIdentityUserCreateDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userName" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "password" in value;

    return isInstance;
}

export function IdentityUserCreateDtoFromJSON(json: any): IdentityUserCreateDto {
    return IdentityUserCreateDtoFromJSONTyped(json, false);
}

export function IdentityUserCreateDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentityUserCreateDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'extraProperties': !exists(json, 'extraProperties') ? undefined : json['extraProperties'],
        'userName': json['userName'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'surname': !exists(json, 'surname') ? undefined : json['surname'],
        'email': json['email'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'isActive': !exists(json, 'isActive') ? undefined : json['isActive'],
        'lockoutEnabled': !exists(json, 'lockoutEnabled') ? undefined : json['lockoutEnabled'],
        'roleNames': !exists(json, 'roleNames') ? undefined : json['roleNames'],
        'password': json['password'],
    };
}

export function IdentityUserCreateDtoToJSON(value?: IdentityUserCreateDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userName': value.userName,
        'name': value.name,
        'surname': value.surname,
        'email': value.email,
        'phoneNumber': value.phoneNumber,
        'isActive': value.isActive,
        'lockoutEnabled': value.lockoutEnabled,
        'roleNames': value.roleNames,
        'password': value.password,
    };
}

