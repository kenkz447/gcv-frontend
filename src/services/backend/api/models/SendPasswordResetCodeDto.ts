/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SendPasswordResetCodeDto
 */
export interface SendPasswordResetCodeDto {
    /**
     * 
     * @type {string}
     * @memberof SendPasswordResetCodeDto
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof SendPasswordResetCodeDto
     */
    appName: string;
    /**
     * 
     * @type {string}
     * @memberof SendPasswordResetCodeDto
     */
    returnUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SendPasswordResetCodeDto
     */
    returnUrlHash?: string | null;
}

/**
 * Check if a given object implements the SendPasswordResetCodeDto interface.
 */
export function instanceOfSendPasswordResetCodeDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "appName" in value;

    return isInstance;
}

export function SendPasswordResetCodeDtoFromJSON(json: any): SendPasswordResetCodeDto {
    return SendPasswordResetCodeDtoFromJSONTyped(json, false);
}

export function SendPasswordResetCodeDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SendPasswordResetCodeDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': json['email'],
        'appName': json['appName'],
        'returnUrl': !exists(json, 'returnUrl') ? undefined : json['returnUrl'],
        'returnUrlHash': !exists(json, 'returnUrlHash') ? undefined : json['returnUrlHash'],
    };
}

export function SendPasswordResetCodeDtoToJSON(value?: SendPasswordResetCodeDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'appName': value.appName,
        'returnUrl': value.returnUrl,
        'returnUrlHash': value.returnUrlHash,
    };
}

