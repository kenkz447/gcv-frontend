/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ActionApiDescriptionModel } from './ActionApiDescriptionModel';
import {
    ActionApiDescriptionModelFromJSON,
    ActionApiDescriptionModelFromJSONTyped,
    ActionApiDescriptionModelToJSON,
} from './ActionApiDescriptionModel';
import type { ControllerInterfaceApiDescriptionModel } from './ControllerInterfaceApiDescriptionModel';
import {
    ControllerInterfaceApiDescriptionModelFromJSON,
    ControllerInterfaceApiDescriptionModelFromJSONTyped,
    ControllerInterfaceApiDescriptionModelToJSON,
} from './ControllerInterfaceApiDescriptionModel';

/**
 * 
 * @export
 * @interface ControllerApiDescriptionModel
 */
export interface ControllerApiDescriptionModel {
    /**
     * 
     * @type {string}
     * @memberof ControllerApiDescriptionModel
     */
    controllerName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ControllerApiDescriptionModel
     */
    controllerGroupName?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ControllerApiDescriptionModel
     */
    isRemoteService?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ControllerApiDescriptionModel
     */
    isIntegrationService?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ControllerApiDescriptionModel
     */
    apiVersion?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ControllerApiDescriptionModel
     */
    type?: string | null;
    /**
     * 
     * @type {Array<ControllerInterfaceApiDescriptionModel>}
     * @memberof ControllerApiDescriptionModel
     */
    interfaces?: Array<ControllerInterfaceApiDescriptionModel> | null;
    /**
     * 
     * @type {{ [key: string]: ActionApiDescriptionModel; }}
     * @memberof ControllerApiDescriptionModel
     */
    actions?: { [key: string]: ActionApiDescriptionModel; } | null;
}

/**
 * Check if a given object implements the ControllerApiDescriptionModel interface.
 */
export function instanceOfControllerApiDescriptionModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ControllerApiDescriptionModelFromJSON(json: any): ControllerApiDescriptionModel {
    return ControllerApiDescriptionModelFromJSONTyped(json, false);
}

export function ControllerApiDescriptionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ControllerApiDescriptionModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'controllerName': !exists(json, 'controllerName') ? undefined : json['controllerName'],
        'controllerGroupName': !exists(json, 'controllerGroupName') ? undefined : json['controllerGroupName'],
        'isRemoteService': !exists(json, 'isRemoteService') ? undefined : json['isRemoteService'],
        'isIntegrationService': !exists(json, 'isIntegrationService') ? undefined : json['isIntegrationService'],
        'apiVersion': !exists(json, 'apiVersion') ? undefined : json['apiVersion'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'interfaces': !exists(json, 'interfaces') ? undefined : (json['interfaces'] === null ? null : (json['interfaces'] as Array<any>).map(ControllerInterfaceApiDescriptionModelFromJSON)),
        'actions': !exists(json, 'actions') ? undefined : (json['actions'] === null ? null : mapValues(json['actions'], ActionApiDescriptionModelFromJSON)),
    };
}

export function ControllerApiDescriptionModelToJSON(value?: ControllerApiDescriptionModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'controllerName': value.controllerName,
        'controllerGroupName': value.controllerGroupName,
        'isRemoteService': value.isRemoteService,
        'isIntegrationService': value.isIntegrationService,
        'apiVersion': value.apiVersion,
        'type': value.type,
        'interfaces': value.interfaces === undefined ? undefined : (value.interfaces === null ? null : (value.interfaces as Array<any>).map(ControllerInterfaceApiDescriptionModelToJSON)),
        'actions': value.actions === undefined ? undefined : (value.actions === null ? null : mapValues(value.actions, ActionApiDescriptionModelToJSON)),
    };
}

