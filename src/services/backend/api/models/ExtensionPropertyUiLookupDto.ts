/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExtensionPropertyUiLookupDto
 */
export interface ExtensionPropertyUiLookupDto {
    /**
     * 
     * @type {string}
     * @memberof ExtensionPropertyUiLookupDto
     */
    url?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExtensionPropertyUiLookupDto
     */
    resultListPropertyName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExtensionPropertyUiLookupDto
     */
    displayPropertyName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExtensionPropertyUiLookupDto
     */
    valuePropertyName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExtensionPropertyUiLookupDto
     */
    filterParamName?: string | null;
}

/**
 * Check if a given object implements the ExtensionPropertyUiLookupDto interface.
 */
export function instanceOfExtensionPropertyUiLookupDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExtensionPropertyUiLookupDtoFromJSON(json: any): ExtensionPropertyUiLookupDto {
    return ExtensionPropertyUiLookupDtoFromJSONTyped(json, false);
}

export function ExtensionPropertyUiLookupDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtensionPropertyUiLookupDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': !exists(json, 'url') ? undefined : json['url'],
        'resultListPropertyName': !exists(json, 'resultListPropertyName') ? undefined : json['resultListPropertyName'],
        'displayPropertyName': !exists(json, 'displayPropertyName') ? undefined : json['displayPropertyName'],
        'valuePropertyName': !exists(json, 'valuePropertyName') ? undefined : json['valuePropertyName'],
        'filterParamName': !exists(json, 'filterParamName') ? undefined : json['filterParamName'],
    };
}

export function ExtensionPropertyUiLookupDtoToJSON(value?: ExtensionPropertyUiLookupDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'resultListPropertyName': value.resultListPropertyName,
        'displayPropertyName': value.displayPropertyName,
        'valuePropertyName': value.valuePropertyName,
        'filterParamName': value.filterParamName,
    };
}

