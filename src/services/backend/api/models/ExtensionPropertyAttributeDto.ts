/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExtensionPropertyAttributeDto
 */
export interface ExtensionPropertyAttributeDto {
    /**
     * 
     * @type {string}
     * @memberof ExtensionPropertyAttributeDto
     */
    typeSimple?: string | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ExtensionPropertyAttributeDto
     */
    config?: { [key: string]: any; } | null;
}

/**
 * Check if a given object implements the ExtensionPropertyAttributeDto interface.
 */
export function instanceOfExtensionPropertyAttributeDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExtensionPropertyAttributeDtoFromJSON(json: any): ExtensionPropertyAttributeDto {
    return ExtensionPropertyAttributeDtoFromJSONTyped(json, false);
}

export function ExtensionPropertyAttributeDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtensionPropertyAttributeDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'typeSimple': !exists(json, 'typeSimple') ? undefined : json['typeSimple'],
        'config': !exists(json, 'config') ? undefined : json['config'],
    };
}

export function ExtensionPropertyAttributeDtoToJSON(value?: ExtensionPropertyAttributeDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'typeSimple': value.typeSimple,
        'config': value.config,
    };
}

