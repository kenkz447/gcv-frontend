/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IdentityUserDto } from './IdentityUserDto';
import {
    IdentityUserDtoFromJSON,
    IdentityUserDtoFromJSONTyped,
    IdentityUserDtoToJSON,
} from './IdentityUserDto';

/**
 * 
 * @export
 * @interface IdentityUserDtoPagedResultDto
 */
export interface IdentityUserDtoPagedResultDto {
    /**
     * 
     * @type {Array<IdentityUserDto>}
     * @memberof IdentityUserDtoPagedResultDto
     */
    items?: Array<IdentityUserDto> | null;
    /**
     * 
     * @type {number}
     * @memberof IdentityUserDtoPagedResultDto
     */
    totalCount?: number;
}

/**
 * Check if a given object implements the IdentityUserDtoPagedResultDto interface.
 */
export function instanceOfIdentityUserDtoPagedResultDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IdentityUserDtoPagedResultDtoFromJSON(json: any): IdentityUserDtoPagedResultDto {
    return IdentityUserDtoPagedResultDtoFromJSONTyped(json, false);
}

export function IdentityUserDtoPagedResultDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentityUserDtoPagedResultDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': !exists(json, 'items') ? undefined : (json['items'] === null ? null : (json['items'] as Array<any>).map(IdentityUserDtoFromJSON)),
        'totalCount': !exists(json, 'totalCount') ? undefined : json['totalCount'],
    };
}

export function IdentityUserDtoPagedResultDtoToJSON(value?: IdentityUserDtoPagedResultDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': value.items === undefined ? undefined : (value.items === null ? null : (value.items as Array<any>).map(IdentityUserDtoToJSON)),
        'totalCount': value.totalCount,
    };
}

