/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntityExtensionDto } from './EntityExtensionDto';
import {
    EntityExtensionDtoFromJSON,
    EntityExtensionDtoFromJSONTyped,
    EntityExtensionDtoToJSON,
} from './EntityExtensionDto';

/**
 * 
 * @export
 * @interface ModuleExtensionDto
 */
export interface ModuleExtensionDto {
    /**
     * 
     * @type {{ [key: string]: EntityExtensionDto; }}
     * @memberof ModuleExtensionDto
     */
    entities?: { [key: string]: EntityExtensionDto; } | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ModuleExtensionDto
     */
    _configuration?: { [key: string]: any; } | null;
}

/**
 * Check if a given object implements the ModuleExtensionDto interface.
 */
export function instanceOfModuleExtensionDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ModuleExtensionDtoFromJSON(json: any): ModuleExtensionDto {
    return ModuleExtensionDtoFromJSONTyped(json, false);
}

export function ModuleExtensionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModuleExtensionDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entities': !exists(json, 'entities') ? undefined : (json['entities'] === null ? null : mapValues(json['entities'], EntityExtensionDtoFromJSON)),
        '_configuration': !exists(json, 'configuration') ? undefined : json['configuration'],
    };
}

export function ModuleExtensionDtoToJSON(value?: ModuleExtensionDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entities': value.entities === undefined ? undefined : (value.entities === null ? null : mapValues(value.entities, EntityExtensionDtoToJSON)),
        'configuration': value._configuration,
    };
}

