/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DateTimeFormatDto
 */
export interface DateTimeFormatDto {
    /**
     * 
     * @type {string}
     * @memberof DateTimeFormatDto
     */
    calendarAlgorithmType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DateTimeFormatDto
     */
    dateTimeFormatLong?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DateTimeFormatDto
     */
    shortDatePattern?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DateTimeFormatDto
     */
    fullDateTimePattern?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DateTimeFormatDto
     */
    dateSeparator?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DateTimeFormatDto
     */
    shortTimePattern?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DateTimeFormatDto
     */
    longTimePattern?: string | null;
}

/**
 * Check if a given object implements the DateTimeFormatDto interface.
 */
export function instanceOfDateTimeFormatDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DateTimeFormatDtoFromJSON(json: any): DateTimeFormatDto {
    return DateTimeFormatDtoFromJSONTyped(json, false);
}

export function DateTimeFormatDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DateTimeFormatDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'calendarAlgorithmType': !exists(json, 'calendarAlgorithmType') ? undefined : json['calendarAlgorithmType'],
        'dateTimeFormatLong': !exists(json, 'dateTimeFormatLong') ? undefined : json['dateTimeFormatLong'],
        'shortDatePattern': !exists(json, 'shortDatePattern') ? undefined : json['shortDatePattern'],
        'fullDateTimePattern': !exists(json, 'fullDateTimePattern') ? undefined : json['fullDateTimePattern'],
        'dateSeparator': !exists(json, 'dateSeparator') ? undefined : json['dateSeparator'],
        'shortTimePattern': !exists(json, 'shortTimePattern') ? undefined : json['shortTimePattern'],
        'longTimePattern': !exists(json, 'longTimePattern') ? undefined : json['longTimePattern'],
    };
}

export function DateTimeFormatDtoToJSON(value?: DateTimeFormatDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'calendarAlgorithmType': value.calendarAlgorithmType,
        'dateTimeFormatLong': value.dateTimeFormatLong,
        'shortDatePattern': value.shortDatePattern,
        'fullDateTimePattern': value.fullDateTimePattern,
        'dateSeparator': value.dateSeparator,
        'shortTimePattern': value.shortTimePattern,
        'longTimePattern': value.longTimePattern,
    };
}

