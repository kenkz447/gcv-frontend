/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ApplicationLocalizationResourceDto } from './ApplicationLocalizationResourceDto';
import {
    ApplicationLocalizationResourceDtoFromJSON,
    ApplicationLocalizationResourceDtoFromJSONTyped,
    ApplicationLocalizationResourceDtoToJSON,
} from './ApplicationLocalizationResourceDto';

/**
 * 
 * @export
 * @interface ApplicationLocalizationDto
 */
export interface ApplicationLocalizationDto {
    /**
     * 
     * @type {{ [key: string]: ApplicationLocalizationResourceDto; }}
     * @memberof ApplicationLocalizationDto
     */
    resources?: { [key: string]: ApplicationLocalizationResourceDto; } | null;
}

/**
 * Check if a given object implements the ApplicationLocalizationDto interface.
 */
export function instanceOfApplicationLocalizationDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ApplicationLocalizationDtoFromJSON(json: any): ApplicationLocalizationDto {
    return ApplicationLocalizationDtoFromJSONTyped(json, false);
}

export function ApplicationLocalizationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationLocalizationDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'resources': !exists(json, 'resources') ? undefined : (json['resources'] === null ? null : mapValues(json['resources'], ApplicationLocalizationResourceDtoFromJSON)),
    };
}

export function ApplicationLocalizationDtoToJSON(value?: ApplicationLocalizationDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'resources': value.resources === undefined ? undefined : (value.resources === null ? null : mapValues(value.resources, ApplicationLocalizationResourceDtoToJSON)),
    };
}

