/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertyApiDescriptionModel
 */
export interface PropertyApiDescriptionModel {
    /**
     * 
     * @type {string}
     * @memberof PropertyApiDescriptionModel
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyApiDescriptionModel
     */
    jsonName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyApiDescriptionModel
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyApiDescriptionModel
     */
    typeSimple?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PropertyApiDescriptionModel
     */
    isRequired?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PropertyApiDescriptionModel
     */
    minLength?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PropertyApiDescriptionModel
     */
    maxLength?: number | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyApiDescriptionModel
     */
    minimum?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyApiDescriptionModel
     */
    maximum?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PropertyApiDescriptionModel
     */
    regex?: string | null;
}

/**
 * Check if a given object implements the PropertyApiDescriptionModel interface.
 */
export function instanceOfPropertyApiDescriptionModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyApiDescriptionModelFromJSON(json: any): PropertyApiDescriptionModel {
    return PropertyApiDescriptionModelFromJSONTyped(json, false);
}

export function PropertyApiDescriptionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyApiDescriptionModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'jsonName': !exists(json, 'jsonName') ? undefined : json['jsonName'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'typeSimple': !exists(json, 'typeSimple') ? undefined : json['typeSimple'],
        'isRequired': !exists(json, 'isRequired') ? undefined : json['isRequired'],
        'minLength': !exists(json, 'minLength') ? undefined : json['minLength'],
        'maxLength': !exists(json, 'maxLength') ? undefined : json['maxLength'],
        'minimum': !exists(json, 'minimum') ? undefined : json['minimum'],
        'maximum': !exists(json, 'maximum') ? undefined : json['maximum'],
        'regex': !exists(json, 'regex') ? undefined : json['regex'],
    };
}

export function PropertyApiDescriptionModelToJSON(value?: PropertyApiDescriptionModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'jsonName': value.jsonName,
        'type': value.type,
        'typeSimple': value.typeSimple,
        'isRequired': value.isRequired,
        'minLength': value.minLength,
        'maxLength': value.maxLength,
        'minimum': value.minimum,
        'maximum': value.maximum,
        'regex': value.regex,
    };
}

