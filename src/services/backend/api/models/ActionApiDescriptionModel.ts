/* tslint:disable */
/* eslint-disable */
/**
 * Gcv API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MethodParameterApiDescriptionModel } from './MethodParameterApiDescriptionModel';
import {
    MethodParameterApiDescriptionModelFromJSON,
    MethodParameterApiDescriptionModelFromJSONTyped,
    MethodParameterApiDescriptionModelToJSON,
} from './MethodParameterApiDescriptionModel';
import type { ParameterApiDescriptionModel } from './ParameterApiDescriptionModel';
import {
    ParameterApiDescriptionModelFromJSON,
    ParameterApiDescriptionModelFromJSONTyped,
    ParameterApiDescriptionModelToJSON,
} from './ParameterApiDescriptionModel';
import type { ReturnValueApiDescriptionModel } from './ReturnValueApiDescriptionModel';
import {
    ReturnValueApiDescriptionModelFromJSON,
    ReturnValueApiDescriptionModelFromJSONTyped,
    ReturnValueApiDescriptionModelToJSON,
} from './ReturnValueApiDescriptionModel';

/**
 * 
 * @export
 * @interface ActionApiDescriptionModel
 */
export interface ActionApiDescriptionModel {
    /**
     * 
     * @type {string}
     * @memberof ActionApiDescriptionModel
     */
    uniqueName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ActionApiDescriptionModel
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ActionApiDescriptionModel
     */
    httpMethod?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ActionApiDescriptionModel
     */
    url?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ActionApiDescriptionModel
     */
    supportedVersions?: Array<string> | null;
    /**
     * 
     * @type {Array<MethodParameterApiDescriptionModel>}
     * @memberof ActionApiDescriptionModel
     */
    parametersOnMethod?: Array<MethodParameterApiDescriptionModel> | null;
    /**
     * 
     * @type {Array<ParameterApiDescriptionModel>}
     * @memberof ActionApiDescriptionModel
     */
    parameters?: Array<ParameterApiDescriptionModel> | null;
    /**
     * 
     * @type {ReturnValueApiDescriptionModel}
     * @memberof ActionApiDescriptionModel
     */
    returnValue?: ReturnValueApiDescriptionModel;
    /**
     * 
     * @type {boolean}
     * @memberof ActionApiDescriptionModel
     */
    allowAnonymous?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof ActionApiDescriptionModel
     */
    implementFrom?: string | null;
}

/**
 * Check if a given object implements the ActionApiDescriptionModel interface.
 */
export function instanceOfActionApiDescriptionModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ActionApiDescriptionModelFromJSON(json: any): ActionApiDescriptionModel {
    return ActionApiDescriptionModelFromJSONTyped(json, false);
}

export function ActionApiDescriptionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActionApiDescriptionModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uniqueName': !exists(json, 'uniqueName') ? undefined : json['uniqueName'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'httpMethod': !exists(json, 'httpMethod') ? undefined : json['httpMethod'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'supportedVersions': !exists(json, 'supportedVersions') ? undefined : json['supportedVersions'],
        'parametersOnMethod': !exists(json, 'parametersOnMethod') ? undefined : (json['parametersOnMethod'] === null ? null : (json['parametersOnMethod'] as Array<any>).map(MethodParameterApiDescriptionModelFromJSON)),
        'parameters': !exists(json, 'parameters') ? undefined : (json['parameters'] === null ? null : (json['parameters'] as Array<any>).map(ParameterApiDescriptionModelFromJSON)),
        'returnValue': !exists(json, 'returnValue') ? undefined : ReturnValueApiDescriptionModelFromJSON(json['returnValue']),
        'allowAnonymous': !exists(json, 'allowAnonymous') ? undefined : json['allowAnonymous'],
        'implementFrom': !exists(json, 'implementFrom') ? undefined : json['implementFrom'],
    };
}

export function ActionApiDescriptionModelToJSON(value?: ActionApiDescriptionModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'uniqueName': value.uniqueName,
        'name': value.name,
        'httpMethod': value.httpMethod,
        'url': value.url,
        'supportedVersions': value.supportedVersions,
        'parametersOnMethod': value.parametersOnMethod === undefined ? undefined : (value.parametersOnMethod === null ? null : (value.parametersOnMethod as Array<any>).map(MethodParameterApiDescriptionModelToJSON)),
        'parameters': value.parameters === undefined ? undefined : (value.parameters === null ? null : (value.parameters as Array<any>).map(ParameterApiDescriptionModelToJSON)),
        'returnValue': ReturnValueApiDescriptionModelToJSON(value.returnValue),
        'allowAnonymous': value.allowAnonymous,
        'implementFrom': value.implementFrom,
    };
}

